// Generated by LiveScript 1.3.1
import React from 'react';

import api from '../../api/api';

import {Grid, CrudActions} from '../../components/NewTable';
import Header from '../../components/PageHeader';
import SemanticModal from '../../components/SemanticModal';

import ActionRenderer from '../../components/ActionRenderer';

import {AccountBtn, PersonBtn} from '../../molecules/ModalButtons';
import {filter, any} from 'prelude-ls'

let customActions = function(props){
  return (
    <AccountBtn primary={true} icon={true} personId={props.row.id}>
      <i classname="icon settings"/>
    </AccountBtn>
  )
};
const cols = [
  {
    key: 'firstName',
    display: 'First Name'
  }, {
    key: 'middleName',
    display: 'Middle Name'
  }, {
    key: 'lastName',
    display: 'Last Name'
  }, {
    key: 'types',
    display: 'Types'
  }, {
    display: '',
    resourceType: "person",
    renderer: CrudActions,
    linkTo: "people",
    className: "right aligned",
    tdClassName: "right aligned",
    customActions: customActions
  }
];
let PeopleList = React.createClass({
  displayName: "PeopleList",
  getInitialState(){
    return {
      currentFilter: 'All',
      people: []
    };
  },
  componentDidMount(){
    api.person.events.addListener("change", this.getPeople);
  },
  componentWillUnmount(){
    api.person.events.removeListener("change", this.getPeople);
  },
  getPeople(){
    api.person.find()
      .then((it) =>{
        this.setState({
          people: it
      });
    });
  },
  componentWillMount(){
    this.getPeople();
  },
  modal(){
    return CreatePersonModal(null);
  },
  renderFilterButton: function(name){
    var isActive, btnClassName, setActive, this$ = this;
    isActive = this.state.currentFilter === name;
    btnClassName = (function(){
      switch (isActive) {
      case true:
        return "btn btn-default active";
      default:
        return "btn btn-default";
      }
    }());
    setActive = function(){
      return this$.setState({
        currentFilter: name
      });
    };
    return (
      <div className={btnClassName} onClick={setActive}>
        {name}
      </div>
    );
    // return div({
    //   className: btnClassName,
    //   onClick: setActive
    // }, name);
  },
  renderGridTop(){
    return (
      <div>
        <div className="btn-group">
          {this.renderFilterButton("All")}
          {this.renderFilterButton("Students")}
          {this.renderFilterButton("Teachers")}
          {this.renderFilterButton("Parents")}
          {this.renderFilterButton("Admins")}
        </div>
        <PersonBtn
          className="btn btn-primary pull-right"
          label="New" />
      </div>
    );
  },
  filteredData(){
    var format, this$ = this;
    format = function(){
      return function(it){
        return it.slice(0, -1);
      }(
      this$.state.currentFilter);
    };
    if (this.state.currentFilter === 'All') {
      return this.state.people;
    } else {
      return filter(function(it){
        return in$(format(this$.state.currentFilter), it.types);
      })(
      this.state.people);
    }
  },
  render(){
    return (
      <div>
        <Header primary="All People"/>
        <div>
          <div>
            {this.renderGridTop()}
          </div>
          <Grid columns={cols} data={this.filteredData()}/>
        </div>
      </div>
    )
  }
});
module.exports = PeopleList;
function in$(x, xs){
  var i = -1, l = xs.length >>> 0;
  while (++i < l) if (x === xs[i]) return true;
  return false;
}
