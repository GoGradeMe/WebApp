// Generated by LiveScript 1.3.1
(function(){
  var React, NewTable, ActionRenderer, SemanticModal, FormMixin, api, Link, Dom, div, a, button, Grid, assignmentCols, AssignmentTypes;
  React = require('react');
  NewTable = require('../../components/NewTable');
  ActionRenderer = require('../../components/ActionRenderer');
  SemanticModal = require('../../components/SemanticModal');
  FormMixin = require('../../mixins/FormMixin');
  api = require('../../api/api');
  Link = require('react-router').Link;
  Dom = React.DOM;
  div = Dom.div, a = Dom.a, button = Dom.button;
  Grid = NewTable.Grid;
  assignmentCols = [
    {
      key: 'name',
      display: 'Name'
    }, {
      key: 'maxScore',
      display: 'Max Grade'
    }, {
      key: 'weight',
      display: 'Weight',
      format: 'decimalPercent'
    }
  ];
  AssignmentTypes = React.createClass({
    displayName: "AssignmentTypes"
  }, this.linkState('startDate'), {
    mixins: [FormMixin],
    getInitialState(){
      return {
        assignmentTypes: []
      };
    },
    componentDidMount(){
      return api.assignmentType.events.addListener("change", this.getAssignmentTypes);
    },
    componentWillUnmount(){
      return api.assignmentType.events.removeListener("change", this.getAssignmentTypes);
    },
    componentWillMount(){
      this.getAssignmentTypes();
    },
    getAssignmentTypes(){
      var this$ = this;
      return api.type.find({
        classId: this.props.params.resourceId,
        termId: this.props.params.termId
      }).then(function(it){
        this$.setState({
          assignmentTypes: it
        });
      });
    },
    render(){
      return div(null, div({
        className: "ui top attached right aligned segment"
      }, SemanticModal.ModalTrigger({
        modal: this.modal()
      }, a({
        className: "ui primary tiny button"
      }, "New Type"))), Grid({
        className: "bottom attached",
        columns: assignmentCols,
        data: this.state.assignmentTypes
      }));
    }
  });
  module.exports = AssignmentTypes;
}).call(this);
